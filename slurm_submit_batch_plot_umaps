#!/bin/bash

#!#############################################################

#SBATCH -J gaussian_calc_metrics_rbf_linearcoviddata
#SBATCH -A COMPUTERLAB-SL2-CPU
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --time=12:00:00
#SBATCH --cpus-per-task=30
#SBATCH --mail-type=ALL
#SBATCH -p icelake

numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')
#! ############################################################
# DATA_FLAGS=('test_covid_data') # 'test_splatter_nb' 'test_splatter_nb_large') #'covid_data_X') #  'splatter_nb' 'splatter_nb_large') #('covid_data') # 'splatter_nb' 'splatter_nb_large')
# MODEL_FLAG='gplvm'
# PREPROC_FLAG=('libnormlogtranscolumnstd') # 'libnormlogtranscolumnstd') # 'libnormlogtranscolumnstd') # logtranscolumnstd'libnormlogtrans' 'libnormlogtranscolumnstd' 
# ENCODER_FLAG=('nnenc' 'scaly' 'scalynocovars') #  'scaly' 'nnenc''scalynocovars' 'scaly' # 'point' 'nnenc' 'scalynocovars' 'scaly')
# KERNEL_FLAG='linear_linear_linearmean'
# LIKELIHOOD_FLAG='gaussianlikelihood'
# SEED_FLAGS=('42') #123' '0' '1' '2') #('42') #('123' '42' '0')

source /home/smxz2/.bashrc # IMPORTANT: needed to ensure that conda works
cd /rds/user/smxz2/hpc-work/scvi-ablation
conda activate /home/smxz2/.conda/envs/gplvm

application="/home/smxz2/.conda/envs/gplvm/bin/python"
options="plotting_umaps.py"
workdir="/rds/user/smxz2/hpc-work/scvi-ablation"
export OMP_NUM_THREADS=1
np=$[${numnodes}*${mpi_tasks_per_node}]

seed='0'

CMD=""
# ## first plot on covid original implementsion
# CMD+="$application $options -d covid_data_X  -p columnstd -e nnenc  -k periodicrbf_linear -l gaussianlikelihood -s 42 &  "
# CMD+="$application $options -d covid_data_X  -p columnstd -e nnenc  -k periodicrbf_linear -l gaussianlikelihood -s 123; "

# ## plots for 5.3 motivating example
# CMD+="$application $options -d covid_data_X -p logtranscolumnstd -e nnenc -k linear_linear_linearmean -l gaussianlikelihood -s $seed & "
# CMD+="$application $options -d covid_data_X -p columnstd -e nnenc -k linear_linear_linearmean -l gaussianlikelihood -s $seed ;  "
# ## 

## plots for 5.4.3 encoder
# CMD+="$application $options -d test_splatter_nb_large -p libnorm -e nnenc -k linear_linear_linearmean -l nblikelihoodnoscalefixedtheta1 --theta_val 1000000 -s $seed & "
# CMD+="$application $options -d test_splatter_nb_large -p libnorm -e scaly -k linear_linear_linearmean -l nblikelihoodnoscalefixedtheta1 --theta_val 1000000 -s $seed ; "
## 

## plots for likelihood ablation
# CMD+="$application $options -d test_splatter_nb_large -p libnorm -e scaly -k rbf_linear -l nblikelihoodnoscalelearntheta -s $seed & "
# CMD+="$application $options -d test_splatter_nb_large -e scaly -k rbf_linear -l nblikelihoodlearnscalefixedtheta1 --theta_val 1000000 -s $seed & "
# CMD+="$application $options -d test_splatter_nb_large  -e scaly -k rbf_linear -l nblikelihoodlearnscalelearntheta -s $seed ;"

# ## plots for 5.4.6 wbich components matter
# CMD+="$application $options -d test_splatter_nb_large -p libnorm -e scaly -k rbf_linear -l nblikelihoodnoscalefixedtheta1 --theta_val 1000000 -s $seed & "
# CMD+="$application $options -d test_splatter_nb_large -p libnorm -e scaly -k linear_linear_linearmean -l nblikelihoodnoscalefixedtheta1 --theta_val 1000000 -s $seed & "
# CMD+="$application $options -d test_splatter_nb_large -p libnorm -e nnenc -k rbf_linear -l nblikelihoodnoscalefixedtheta1 --theta_val 1000000 -s 42; "
# CMD+="$application $options -d test_splatter_nb_large -p libnorm -e nnenc -k rbf_linear -l nblikelihoodnoscalefixedtheta1 --theta_val 1000000 -s 123; "
# CMD+="$application $options -d test_splatter_nb_large -p libnormlogtranscolumnstd -e scaly -k rbf_linear -l gaussianlikelihood -s $seed ; "
# ## 

# ## plots for benchmarking simulated 
# CMD+="$application $options -d test_splatter_nb_large -p logtranscolumnstd -e nnenc -k linear_linear_linearmean -l gaussianlikelihood -s $seed & "
# CMD+="$application $options -d test_splatter_nb_large -m scvi -s $seed & "
# CMD+="$application $options -d test_splatter_nb_large -m linear_scvi -s $seed ; "
# ##

# CMD+="$application $options -d test_splatter_nb_large -p logtranscolumnstd -e nnenc -k rbf_linear -l gaussianlikelihood -s $seed & "
CMD+="$application $options -d test_covid_data -p logtranscolumnstd -e nnenc -k rbf_linear -l gaussianlikelihood -s 42 & "
CMD+="$application $options -d test_covid_data -p logtranscolumnstd -e nnenc -k rbf_linear -l gaussianlikelihood -s 123 ; "
# CMD+="$application $options -d test_covid_data -p logtranscolumnstd -e nnenc -k rbf_linear -l gaussianlikelihood -s $seed ; "

# # plots for benchmarking covid 
# CMD+="$application $options -d test_covid_data -p libnorm -e scaly -k rbf_linear -l nblikelihoodnoscalefixedtheta1 --theta_val 1000000 -s $seed & "
# CMD+="$application $options -d test_covid_data -p logtranscolumnstd -e nnenc -k linear_linear_linearmean -l gaussianlikelihood -s $seed ; "
# CMD+="$application $options -d test_covid_data -m scvi -s $seed & "
# CMD+="$application $options -d test_covid_data -m linear_scvi -s $seed ; "
# #

echo -e $CMD


###############################################################
# we don't change this stuff - this is from the template

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

if [ "$SLURM_JOB_NODELIST" ]; then
        #! Create a machine file:
        export NODEFILE=`generate_pbs_nodefile`
        cat $NODEFILE | uniq > machine.file.$JOBID
        echo -e "\nNodes allocated:\n================"
        echo `cat machine.file.$JOBID | sed -e 's/\..*$//g'`
fi

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n"

eval $CMD
