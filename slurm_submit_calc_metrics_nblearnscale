#!/bin/bash

#!#############################################################

#SBATCH -J gplvm_nbnoscale_calc_metrics
#SBATCH -A COMPUTERLAB-SL3-CPU
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --time=2:00:00
#SBATCH --cpus-per-task=32
#SBATCH --mail-type=ALL
#SBATCH -p icelake

numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')
#! ############################################################
DATA_FLAGS=('splatter_nb' 'splatter_nb_large') #'covid_data' 
MODEL_FLAG='gplvm'
PREPROC_FLAG='rawcounts'
ENCODER_FLAG=('scalynocovars' 'scaly')
KERNEL_FLAG='linear_linear'
LIKELIHOOD_FLAG=('nblikelihoodlearnscalelearntheta' 'nblikelihoodlearnscalefixedtheta1')
SEED_FLAGS=('42') #('123' '42' '0')

source /home/smxz2/.bashrc # IMPORTANT: needed to ensure that conda works
cd /rds/user/smxz2/hpc-work/scvi-ablation
conda activate /home/smxz2/.conda/envs/gplvm

application="/home/smxz2/.conda/envs/gplvm/bin/python"
options_metrics="calc_metrics.py -m ${MODEL_FLAG} -p ${PREPROC_FLAG} -k ${KERNEL_FLAG} -l ${LIKELIHOOD_FLAG}"
workdir="/rds/user/smxz2/hpc-work/scvi-ablation"
export OMP_NUM_THREADS=1
np=$[${numnodes}*${mpi_tasks_per_node}]

CMD=""
for seed in "${SEED_FLAGS[@]}"
do
  for l_flag in "${LIKELIHOOD_FLAG[@]}"
  do
    for e_flag in "${ENCODER_FLAG[@]}"
    do
      for d_flag in "${DATA_FLAGS[@]}"
      do
        CMD+="$application $options_metrics -d ${d_flag} -e ${e_flag} -l ${l_flag} -s ${seed} > ./models/${d_flag}/seed${seed}/${MODEL_FLAG}_${PREPROC_FLAG}_${e_flag}_${KERNEL_FLAG}_${l_flag}_metrics_output.txt & "
      done
    done
    CMD+="wait; "
  done
done

echo -e $CMD


###############################################################
# we don't change this stuff - this is from the template

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

if [ "$SLURM_JOB_NODELIST" ]; then
        #! Create a machine file:
        export NODEFILE=`generate_pbs_nodefile`
        cat $NODEFILE | uniq > machine.file.$JOBID
        echo -e "\nNodes allocated:\n================"
        echo `cat machine.file.$JOBID | sed -e 's/\..*$//g'`
fi

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n"

eval $CMD