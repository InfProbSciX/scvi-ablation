#!/bin/bash

#!#############################################################

#SBATCH -J full_covid_data_metrics
#SBATCH -A COMPUTERLAB-SL2-CPU
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --time=12:00:00
#SBATCH --cpus-per-task=76
#SBATCH --mail-type=ALL
#SBATCH -p icelake

numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')
#! ############################################################
DATA_FLAG='full_covid_data'
MODEL_FLAG='gplvm'
PREPROC_FLAG='libnorm' 
ENCODER_FLAG='scaly' 
KERNEL_FLAG='rbf_linear' 
LIKELIHOOD_FLAG='nblikelihoodnoscalefixedtheta1'
SEED_FLAG='0'
THETA_VAL='1000000'

source /home/smxz2/.bashrc # IMPORTANT: needed to ensure that conda works
cd /rds/user/smxz2/hpc-work/scvi-ablation
conda activate /home/smxz2/.conda/envs/gplvm

application="/home/smxz2/.conda/envs/gplvm/bin/python"
options_metrics="calc_metrics.py -m ${MODEL_FLAG} -k ${KERNEL_FLAG} -l ${LIKELIHOOD_FLAG} -p ${PREPROC_FLAG} -d ${DATA_FLAG} -e ${ENCODER_FLAG} -s ${SEED_FLAG}"
workdir="/rds/user/smxz2/hpc-work/scvi-ablation"
export OMP_NUM_THREADS=1
np=$[${numnodes}*${mpi_tasks_per_node}]

CMD="$application $options_metrics --theta_val $THETA_VAL > ./models/${DATA_FLAG}/seed${SEED_FLAG}/${MODEL_FLAG}_${PREPROC_FLAG}_${ENCODER_FLAG}_${KERNEL_FLAG}_${LIKELIHOOD_FLAG}_theta${THETA_VAL}_metrics_output.txt"

echo -e $CMD


###############################################################
# we don't change this stuff - this is from the template

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

if [ "$SLURM_JOB_NODELIST" ]; then
        #! Create a machine file:
        export NODEFILE=`generate_pbs_nodefile`
        cat $NODEFILE | uniq > machine.file.$JOBID
        echo -e "\nNodes allocated:\n================"
        echo `cat machine.file.$JOBID | sed -e 's/\..*$//g'`
fi

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n"

eval $CMD