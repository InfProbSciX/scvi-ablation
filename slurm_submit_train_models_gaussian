#!/bin/bash

#!#############################################################

#SBATCH -J gauss
#SBATCH -A COMPUTERLAB-SL3-GPU
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --gres=gpu:1
#SBATCH --time=2:00:00
#SBATCH --mail-type=ALL
#SBATCH -p ampere

numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')
#! ############################################################
DATA_FLAGS=('covid_data') #('covid_data') # 'splatter_nb' 'splatter_nb_large')
MODEL_FLAG='gplvm'
PREPROC_FLAGS=('logtranscolumnstd') #'logtranscolumnstd') #('libnormlogtranscolumnstd' 'libnormlogtrans' 'logtranscolumnstd' 'libnormlogtranscolumnstd')
ENCODER_FLAGS=('scaly') #('scalynocovars' 'scaly') #('vpoint' 'nnenc') #('scalynocovars' 'scaly')  #('vpoint' 'nnenc') #('scalynocovars' 'scaly') #('vpoint' 'nnenc') #'scalynocovars' 'scaly') # ('point' 'nnenc')  ('vpoint' 'nnenc')
KERNEL_FLAG='periodicrbf_linear' #'linear_linear'
LIKELIHOOD_FLAG='gaussianlikelihood'
SEED_FLAG=('42') # ('123' '42' '0')

source /home/smxz2/.bashrc # IMPORTANT: needed to ensure that conda works
cd /rds/user/smxz2/hpc-work/scvi-ablation
conda activate /home/smxz2/.conda/envs/gplvm

application="/home/smxz2/.conda/envs/gplvm/bin/python"
options_train="train_models.py -m ${MODEL_FLAG} -k ${KERNEL_FLAG} -l ${LIKELIHOOD_FLAG}"
options_metrics="calc_metrics.py -m ${MODEL_FLAG} -k ${KERNEL_FLAG} -l ${LIKELIHOOD_FLAG}"
workdir="/rds/user/smxz2/hpc-work/scvi-ablation"
export OMP_NUM_THREADS=1
np=$[${numnodes}*${mpi_tasks_per_node}]

CMD=""
for seed in "${SEED_FLAG[@]}"
do
  for p_flag in "${PREPROC_FLAGS[@]}"
  do
    for e_flag in "${ENCODER_FLAGS[@]}"
    do
      for data in "${DATA_FLAGS[@]}"
      do
        if [ $data == 'covid_data' ]; then
          CMD+="$application $options_train -p ${p_flag} -d ${data} -e ${e_flag} -s ${seed} > ./models/${data}/seed${seed}/${MODEL_FLAG}_${p_flag}_${e_flag}_${KERNEL_FLAG}_${LIKELIHOOD_FLAG}_output.txt & "
        elif [ $data == 'splatter_nb_large' ]; then
          CMD+="$application $options_train -p ${p_flag} -d ${data} -e ${e_flag} -s ${seed} --epochs 30 > ./models/${data}/seed${seed}/${MODEL_FLAG}_${p_flag}_${e_flag}_${KERNEL_FLAG}_${LIKELIHOOD_FLAG}_output.txt & "
        else #nb_splattersmall
          CMD+="$application $options_train -p ${p_flag} -d ${data} -e ${e_flag} -s ${seed} --epochs 300 > ./models/${data}/seed${seed}/${MODEL_FLAG}_${p_flag}_${e_flag}_${KERNEL_FLAG}_${LIKELIHOOD_FLAG}_output.txt & "
        fi
      done
      CMD+="wait; "
    done
  done
done
CMD+="wait;"
# for seed in "${SEED_FLAG[@]}"
# do
#   for p_flag in "${PREPROC_FLAGS[@]}"
#   do
#     for e_flag in "${ENCODER_FLAGS[@]}"
#     do
#       CMD+="$application $options_metrics -p ${p_flag} -e ${e_flag} -s ${seed} > ./models/${DATA_FLAG}/seed${seed}/${MODEL_FLAG}_${p_flag}_${e_flag}_${KERNEL_FLAG}_${LIKELIHOOD_FLAG}_metrics_output.txt & "
#     done
#     # CMD+="wait; "
#   done
# done
# CMD+="wait"

echo -e $CMD

# ###############################################################
# we don't change this stuff - this is from the template

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

if [ "$SLURM_JOB_NODELIST" ]; then
        #! Create a machine file:
        export NODEFILE=`generate_pbs_nodefile`
        cat $NODEFILE | uniq > machine.file.$JOBID
        echo -e "\nNodes allocated:\n================"
        echo `cat machine.file.$JOBID | sed -e 's/\..*$//g'`
fi

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n"

eval $CMD
